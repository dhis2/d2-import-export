const commonIds = {
    DataElementIdScheme: 'input-data-element-id-scheme',
    DataSetPicker: 'input-data-set-picker',
    EventIdScheme: 'input-event-id-scheme',
    FileUpload: 'input-file-upload',
    FormAlerts: 'input-form-alerts',
    IdScheme: 'input-id-scheme',
    MoreOptions: 'interaction-more-options',
    OrgUnitIdScheme: 'input-org-unit-id-scheme',
    OrgUnitTree: 'input-org-unit-tree',
    ProgramPicker: 'input-program-picker',
    ProgramStageSelect: 'input-program-stage-select',
    atomicMode: 'input-atomic-mode',
    classKey: 'input-class-key',
    compression: 'input-compression',
    dryRun: 'input-dry-run',
    endDate: 'input-end-date',
    export: 'input-export-submit',
    firstRowIsHeader: 'input-first-row-is-header',
    flushMode: 'input-flush-mode',
    format: 'input-format',
    hasAuthorityToSkipAudit: 'input-has-authority-to-skip-audit',
    identifier: 'input-identifier',
    import: 'input-import-submit',
    ImportButtonStrip: 'input-import-button-strip',
    importReportMode: 'input-import-report-mode',
    importStrategy: 'input-import-strategy',
    includeChildren: 'input-include-children',
    includeDeleted: 'input-include-deleted',
    inclusion: 'input-inclusion',
    inclusionStrategy: 'input-inclusion-strategy',
    isAsync: 'input-is-async',
    mergeMode: 'input-merge-mode',
    ObjectSelect: 'input-object-select',
    objectType: 'input-object-type',
    preheatCache: 'input-preheat-cache',
    preheatMode: 'input-preheat-mode',
    Schemas: 'input-schemas',
    skipExisitingCheck: 'input-skip-exisiting-check',
    skipSharing: 'input-skip-sharing',
    skipValidation: 'input-skip-validation',
    startDate: 'input-start-date',
    strategy: 'input-strategy',
}

const testIds = {
    App: {},
    Icon: {
        data: 'icon-data',
        event: 'icon-event',
        gml: 'icon-gml',
        logo: 'icon-logo',
        metadataDependencyExport: 'icon-metadatadependencyexport',
        metadataExport: 'icon-metadataexport',
        metadataImport: 'icon-metadataimport',
        minus: 'icon-minus',
        plus: 'icon-plus',
        tasks: 'icon-tasks',
    },
    DataImport: {
        Page: 'page-import-data',
        DataElementIdScheme: commonIds.DataElementIdScheme,
        FileUpload: commonIds.FileUpload,
        FormAlerts: commonIds.FormAlerts,
        IdScheme: commonIds.IdScheme,
        ImportButtonStrip: commonIds.ImportButtonStrip,
        MoreOptions: commonIds.MoreOptions,
        OrgUnitIdScheme: commonIds.OrgUnitIdScheme,
        dryRun: commonIds.dryRun,
        firstRowIsHeader: commonIds.firstRowIsHeader,
        format: commonIds.format,
        hasAuthorityToSkipAudit: commonIds.hasAuthorityToSkipAudit,
        preheatCache: commonIds.preheatCache,
        skipExisitingCheck: commonIds.skipExisitingCheck,
        strategy: commonIds.strategy,
        submit: commonIds.import,
    },
    EventImport: {
        Page: 'page-import-event',
        EventIdScheme: commonIds.EventIdScheme,
        FileUpload: commonIds.FileUpload,
        FormAlerts: commonIds.FormAlerts,
        ImportButtonStrip: commonIds.ImportButtonStrip,
        MoreOptions: commonIds.MoreOptions,
        OrgUnitIdScheme: commonIds.OrgUnitIdScheme,
        dryRun: commonIds.dryRun,
        format: commonIds.format,
        submit: commonIds.import,
    },
    GMLImport: {
        Page: 'page-import-gml',
        FileUpload: commonIds.FileUpload,
        FormAlerts: commonIds.FormAlerts,
        ImportButtonStrip: commonIds.ImportButtonStrip,
        dryRun: commonIds.dryRun,
        submit: commonIds.import,
    },
    MetadataImport: {
        Page: 'page-import-metadata',
        FileUpload: commonIds.FileUpload,
        FormAlerts: commonIds.FormAlerts,
        ImportButtonStrip: commonIds.ImportButtonStrip,
        MoreOptions: commonIds.MoreOptions,
        atomicMode: commonIds.atomicMode,
        classKey: commonIds.classKey,
        dryRun: commonIds.dryRun,
        firstRowIsHeader: commonIds.firstRowIsHeader,
        flushMode: commonIds.flushMode,
        format: commonIds.format,
        identifier: commonIds.identifier,
        importReportMode: commonIds.importReportMode,
        importStrategy: commonIds.importStrategy,
        inclusionStrategy: commonIds.inclusionStrategy,
        isAsync: commonIds.isAsync,
        mergeMode: commonIds.mergeMode,
        preheatMode: commonIds.preheatMode,
        skipSharing: commonIds.skipSharing,
        skipValidation: commonIds.skipValidation,
        submit: commonIds.import,
    },
    DataExport: {
        Page: 'page-export-data',
        DataElementIdScheme: commonIds.DataElementIdScheme,
        DataSetPicker: commonIds.DataSetPicker,
        FormAlerts: commonIds.FormAlerts,
        IdScheme: commonIds.IdScheme,
        MoreOptions: commonIds.MoreOptions,
        OrgUnitIdScheme: commonIds.OrgUnitIdScheme,
        OrgUnitTree: commonIds.OrgUnitTree,
        compression: commonIds.compression,
        endDate: commonIds.endDate,
        format: commonIds.format,
        includeChildren: commonIds.includeChildren,
        includeDeleted: commonIds.includeDeleted,
        startDate: commonIds.startDate,
        submit: commonIds.export,
    },
    EventExport: {
        Page: 'page-export-event',
        FormAlerts: commonIds.FormAlerts,
        IdScheme: commonIds.IdScheme,
        MoreOptions: commonIds.MoreOptions,
        OrgUnitTree: commonIds.OrgUnitTree,
        ProgramPicker: commonIds.ProgramPicker,
        ProgramStageSelect: commonIds.ProgramStageSelect,
        compression: commonIds.compression,
        endDate: commonIds.endDate,
        format: commonIds.format,
        includeDeleted: commonIds.includeDeleted,
        inclusion: commonIds.inclusion,
        startDate: commonIds.startDate,
        submit: commonIds.export,
    },
    MetadataDependencyExport: {
        Page: 'page-export-metadata-dependency',
        compression: commonIds.compression,
        format: commonIds.format,
        ObjectSelect: commonIds.ObjectSelect,
        objectType: commonIds.objectType,
        skipSharing: commonIds.skipSharing,
        submit: commonIds.export,
    },
    MetadataExport: {
        Page: 'page-export-metadata',
        compression: commonIds.compression,
        FormAlerts: commonIds.FormAlerts,
        format: commonIds.format,
        Schemas: commonIds.Schemas,
        skipSharing: commonIds.skipSharing,
        submit: commonIds.export,
    },
    MiniJobSummary: {
        container: 'mini-job-summary-container',
    },
    JobSummary: {
        container: 'job-summary-container',
        conflicts: 'job-summary-conflicts',
        date: 'job-summary-date',
        details: 'job-summary-task-details',
        events: 'job-summary-events',
        jobDetails: 'job-summary-job-details',
        filename: 'job-summary-filename',
        messages: 'job-summary-messages',
        singleSummary: 'job-summary-single-summary',
        summary: 'job-summary-summary',
        tags: 'job-summary-tags',
        typeCount: 'job-summary-type-count',
    },
    JobOverview: {
        general: 'job-overview-',
        Page: 'job-overview-page',
        MenuLabel: 'job-overview-menu-label',
        container: 'job-overview-container',
        items: 'job-overview-tasks',
        chips: 'job-overview-chips',
        JobSummary: 'job-overview-summary',
    },
    WithUser: {
        ScreenCover: 'with-user-screen-cover',
        Loader: 'with-user-loader',
        Error: 'with-user-error',
    },
}

export { testIds }
